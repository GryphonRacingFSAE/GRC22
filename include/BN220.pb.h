/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_BN220_PB_H_INCLUDED
#define PB_BN220_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _BN220_Message {
    double longitude;
    double latitude;
    double altitude;
} BN220_Message;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define BN220_Message_init_default               {0, 0, 0}
#define BN220_Message_init_zero                  {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define BN220_Message_longitude_tag              1
#define BN220_Message_latitude_tag               2
#define BN220_Message_altitude_tag               3

/* Struct field encoding specification for nanopb */
#define BN220_Message_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, DOUBLE,   longitude,         1) \
X(a, STATIC,   SINGULAR, DOUBLE,   latitude,          2) \
X(a, STATIC,   SINGULAR, DOUBLE,   altitude,          3)
#define BN220_Message_CALLBACK NULL
#define BN220_Message_DEFAULT NULL

extern const pb_msgdesc_t BN220_Message_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define BN220_Message_fields &BN220_Message_msg

/* Maximum encoded size of messages (where known) */
#define BN220_Message_size                       27

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
